<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2009 NagVis Project

 License:

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
>
	<mx:Script>
		<![CDATA[
			[Bindable] public var contractedHeight : int = 0;
			[Bindable] public var   expandedHeight : int = 0;
			[Bindable] public var contractedWidth  : int = 0;
			[Bindable] public var   expandedWidth  : int = 0;
		]]>
	</mx:Script>

	<mx:Script>
		<![CDATA[
			private var _group : EdgeBoxGroup;

			public function get group() : EdgeBoxGroup
			{
				return _group;
			}

			[Bindable]
			public function set group(g : EdgeBoxGroup) : void
			{
				_group = g;
				_group.register(this);
			}
		]]>
	</mx:Script>

     <mx:Metadata>
        [Event( name="resized", type="flash.events.Event" )]
        [Event( name="expanded", type="flash.events.Event" )]
        [Event( name="contracted", type="flash.events.Event" )]
    </mx:Metadata>

	<mx:states>
		<mx:State name="right-contracted">
			<mx:SetStyle  	name="right" value="{contractedWidth - width}"/>
			<mx:SetProperty name="height" value="{contractedHeight}"/>
			<mx:enterState>
				<![CDATA[
					dispatchEvent(new Event("contracted", true));
				]]>
			</mx:enterState>
		</mx:State>
		<mx:State name="right-expanded">
			<mx:SetStyle  	name="right" value="{expandedWidth - width}"/>
			<mx:SetProperty name="height" value="{expandedHeight}"/>
			<mx:enterState>
				<![CDATA[
					dispatchEvent(new Event("expanded", true));
				]]>
			</mx:enterState>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="right-contracted" toState="right-expanded">
			<mx:Parallel>
				<mx:Resize target="{this}" effectEnd="dispatchEvent(new Event('resized', true))"/>
				<mx:Move target="{this}"/>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition fromState="right-expanded" toState="right-contracted">
			<mx:Parallel>
				<mx:Resize target="{this}" effectEnd="dispatchEvent(new Event('resized', true))"/>
				<mx:Move target="{this}"/>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>

	<mx:Script>
		<![CDATA[
			internal function setCurrentStateInternal(stateName : String, playTransition : Boolean = true):void
			{
				super.setCurrentState(stateName, playTransition);
			}

			public override function setCurrentState(stateName : String, playTransition : Boolean = true):void
			{
				if (stateName != currentState)
				{
					if (group)
					{
						switch(getStatus(stateName))
						{
							case "expanded":
								group.setCurrentBox(this, playTransition);
								break;

							case "contracted":
								group.setCurrentBox(null, playTransition);
								break;
						}
					}
					else
					{
						setCurrentStateInternal(stateName, playTransition);
					}
				}
			}

			public function getStatus(stateName : String) : String
			{
				return splitState(stateName)[1];
			}

			public function get status():String
			{
				return getStatus(currentState);
			}

			public function getSide(stateName : String) : String
			{
				return splitState(stateName)[0];
			}

			public function get side():String
			{
				return getSide(currentState);
			}

			protected function splitState(stateName : String) : Array
			{
				if (stateName == null)
					return [null, null];

				var slices : Array = stateName.split('-');

				if (slices.length != 2)
					return [null, null];

				return slices;
			}

			public function onClick(event : Event) : void
			{
				this.setCurrentState('right-expanded');
			}
		]]>
	</mx:Script>

</mx:Canvas>
