<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2009 NagVis Project

 License:

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<EventMap
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns="http://mate.asfusion.com/"
>
	<mx:Script>
		<![CDATA[
			import modules.gmap.data.SettingsData;
			import mx.controls.Alert;

			import com.asfusion.mate.events.UnhandledFaultEvent;

			import modules.gmap.events.ModeEvent;
			import modules.gmap.events.SettingsEvent;

			import modules.gmap.mediator.MainMD;
			import modules.gmap.mediator.MapMD;
		]]>
	</mx:Script>

	<EventHandlers type="{UnhandledFaultEvent.FAULT}">
		<InlineInvoker method="Alert.show" arguments="{[event.fault.faultString, 'Error']}"/>
	</EventHandlers>
	
	<EventHandlers type="resized">
		<MethodInvoker generator="{MainMD}" method="reconsiderMode"/>
	</EventHandlers>

	<EventHandlers type="{ModeEvent.CHANGED}">
		<MethodInvoker generator="{MapMD}" method="onModeChanged" arguments="{[event.oldMode, event.newMode]}"/>
	</EventHandlers>

	<EventHandlers type="{SettingsEvent.CHANGE}">
		<RemoteObjectInvoker destination="zend" source="SettingsService" method="save" arguments="{event.settings}">
			<resultHandlers>
				<DataCopier destination="{SettingsData}" destinationKey="settings" source="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{SettingsEvent.RELOAD}">
		<RemoteObjectInvoker destination="zend" source="SettingsService" method="save" arguments="{event.settings}">
			<resultHandlers>
				<InlineInvoker method="ExternalInterface.call" arguments="window.location.reload"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

</EventMap>
