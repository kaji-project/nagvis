<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2009 NagVis Project

 License:

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<EventMap
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns="http://mate.asfusion.com/"
>
	<mx:Script>
		<![CDATA[
			import modules.gmap.mediator.MapMD;
			import modules.gmap.mediator.MainMD;
			import modules.gmap.mediator.Poller;
			import modules.gmap.data.SettingsData;
			import modules.gmap.data.LinksData;
			import modules.gmap.events.LinkEvent;
			import modules.gmap.data.CurrentLink;
		]]>
	</mx:Script>

	<mx:RemoteObject id="LinksService" destination="zend" source="LinkService" />

	<EventHandlers type="{LinkEvent.SELECTED}">
		<MethodInvoker generator="{CurrentLink}" method="update" arguments="{event.link}"/>
		<MethodInvoker generator="{MainMD}" method="selectLink" arguments="{event.link}"/>
	</EventHandlers>
	
	<EventHandlers type="{LinkEvent.TRYON}">
		<MethodInvoker generator="{MapMD}" method="tryOnLink" arguments="{event.link}"/>
	</EventHandlers>

	<EventHandlers type="{LinkEvent.ACTIVATE}">
		<DataCopier destination="data" destinationKey="settings" source="{SettingsData}" sourceKey="settings"/>
		<MethodInvoker generator="{MainMD}" method="activate" arguments="{[event.link, data.settings]}"/>
	</EventHandlers>

	<EventHandlers type="{LinkEvent.ADD}">
		<RemoteObjectInvoker instance="{LinksService}" method="add" arguments="{event.link}">
			<resultHandlers>
				<MethodInvoker generator="{LinksData}" method="addUpdateItem" arguments="{resultObject}"/>
				<MethodInvoker generator="{CurrentLink}" method="update" arguments="{lastReturn}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{LinkEvent.SAVE}">
		<RemoteObjectInvoker instance="{LinksService}" method="edit" arguments="{event.link}">
			<resultHandlers>
				<MethodInvoker generator="{CurrentLink}" method="update" arguments="{null}"/>
				<MethodInvoker generator="{LinksData}" method="addUpdateItem" arguments="{resultObject}"/>
				<MethodInvoker generator="{CurrentLink}" method="update" arguments="{lastReturn}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{LinkEvent.DELETE}">
		<RemoteObjectInvoker instance="{LinksService}" method="remove" arguments="{event.link.id}">
			<resultHandlers>
				<MethodInvoker generator="{LinksData}" method="removeItemById" arguments="{resultObject}"/>
				<EventAnnouncer generator="{LinkEvent}" constructorArguments="{LinkEvent.SELECTED}" />
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{Poller.TIMEOUT}">
		<RemoteObjectInvoker instance="{LinksService}" method="getAll" arguments="true">
			<resultHandlers>
				<MethodInvoker generator="{LinksData}" method="virginize"/>
				<MethodInvoker generator="{LinksData}" method="addUpdateItems" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

</EventMap>
