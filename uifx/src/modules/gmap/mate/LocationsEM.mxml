<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2009 NagVis Project

 License:

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<EventMap
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns="http://mate.asfusion.com/"
>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;

			import modules.gmap.data.CurrentLocation;
			import modules.gmap.data.LocationsData;
			import modules.gmap.data.LocationsExtData;
			import modules.gmap.data.LinksData;
			import modules.gmap.data.SettingsData;

			import modules.gmap.events.AddressEvent;
			import modules.gmap.events.LocationEvent;

			import modules.gmap.mediator.MainMD;
			import modules.gmap.mediator.Poller;
		]]>
	</mx:Script>

	<mx:RemoteObject id="LocationsService" destination="zend" source="LocationService" />

	<EventHandlers type="{LocationEvent.SELECTED}">
		<MethodInvoker generator="{CurrentLocation}" method="update" arguments="{event.location}"/>
		<MethodInvoker generator="{MainMD}" method="selectLocation" arguments="{event.location}"/>
	</EventHandlers>

	<EventHandlers type="{LocationEvent.ACTIVATE}">
		<DataCopier destination="data" destinationKey="settings" source="{SettingsData}" sourceKey="settings"/>
		<MethodInvoker generator="{MainMD}" method="activate" arguments="{[event.location, data.settings]}"/>
	</EventHandlers>

	<EventHandlers type="{AddressEvent.LOCATE}">
		<RemoteObjectInvoker instance="{LocationsService}" method="find" arguments="{event.address}">
			<resultHandlers>
				<MethodInvoker generator="{LocationsExtData}" method="fill" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{LocationEvent.ADD}">
		<RemoteObjectInvoker instance="{LocationsService}" method="add" arguments="{event.location}">
			<resultHandlers>
				<MethodInvoker generator="{LocationsData}" method="addUpdateItem" arguments="{resultObject}"/>
				<MethodInvoker generator="{CurrentLocation}" method="update" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{LocationEvent.SAVE}">
		<RemoteObjectInvoker instance="{LocationsService}" method="edit" arguments="{event.location}">
			<resultHandlers>
				<MethodInvoker generator="{LocationsData}" method="addUpdateItem" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{LocationEvent.DELETE}">
		<RemoteObjectInvoker instance="{LocationsService}" method="remove" arguments="{event.location.id}">
			<resultHandlers>
				<MethodInvoker generator="{LocationsData}" method="removeItemById" arguments="{resultObject}"/>
				<EventAnnouncer generator="{LocationEvent}" constructorArguments="{LocationEvent.SELECTED}" />
				
				<DataCopier destination="data" destinationKey="links" source="{LinksData}"/>
				<MethodInvoker generator="{MainMD}" method="removeRelatedLinks" arguments="{[resultObject, data.links]}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

	<EventHandlers type="{Poller.TIMEOUT}">
		<RemoteObjectInvoker instance="{LocationsService}" method="getAll" arguments="true">
			<resultHandlers>
				<MethodInvoker generator="{LocationsData}" method="virginize"/>
				<MethodInvoker generator="{LocationsData}" method="addUpdateItems" arguments="{resultObject}"/>
			</resultHandlers>
		</RemoteObjectInvoker>
	</EventHandlers>

</EventMap>
